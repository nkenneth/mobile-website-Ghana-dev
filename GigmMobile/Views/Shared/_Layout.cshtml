<!DOCTYPE html>
<html ng-app="gigm">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>@ViewBag.Title GIGM.com | Nigeria's leading transport company</title>
	<link rel="icon"
		  type="image/png"
		  href="https://m.gigm.com/img/ico.png">

	@*@Styles.Render("~/Content/css")*@

	<link id="style1" href="~/Content/bootstrap.min.css" rel="stylesheet" />
	<link id="style2" href="~/Content/mdb.min.css" rel="stylesheet" />
	<link id="style3" href="~/Content/font-awesome.min.css" rel="stylesheet" />
	<link id="style4" href="~/Content/select.css" rel="stylesheet" />
	<link  href="~/Content/sweetalert.css" rel="stylesheet" />

	<link  href="~/Content/selectize.default.css" rel="stylesheet" />
	<link id="style7" href="	~/Content/style.css" rel="stylesheet" />
	<link id="style6" href="~/Content/status.css" rel="stylesheet" />
	<link href="~/Content/seat.css" rel="stylesheet" />





	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/3.4.5/select2.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.8.5/css/selectize.default.css">
	@Scripts.Render("~/bundles/modernizr")
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
	@*<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.6.3/css/bootstrap-select.min.css" />*@
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/css/bootstrap-select.min.css" />

	@*@RenderSection("Styles", false)*@
	@Scripts.Render("~/bundles/angular")

	@Scripts.Render("~/bundles/jquery")
	<link rel="stylesheet" href="~/Content/style2.css" />
	<style>


		/*.main2  {
		background-image: url('../img/layer5.jpg') !important;

		}*/
		.side-nav .logo-wrapper img {
			padding: 7% 90px !important;
		}

		.picker__box .picker__header .picker__date-display .picker__day-display {
			font-size: 2.5rem;
			margin-left: 26%;
			font-weight: 400;
			font-weight: bold;
		}

		#switcher {
			padding-top: .5rem;
			padding-bottom: .5rem;
		}

		.main2 {
			background: url(../img/layer6.jpg) 20% 0/100% no-repeat fixed #e23d41 !important;
			height: 225px;
			z-index: 2;
		}

		@@media screen and (max-width:360px) {

			.main2 {
				height: 195px !important;
			}

			.paddo .img-cus {
				padding-top: 20%;
			}
		}

		.paddo i {
			color: red !important;
			display: none;
		}

		.paddo2 i {
			display: inline-block !important;
		}
	</style>

	@*  @Scripts.Render("~/bundles/fonts")*@
</head>

<body class="fixed-sn light-blue-skin" ng-controller="home as rvm" ng-cloak>





	<!-- /Start your project here-->
	<!-- SCRIPTS -->
	<!-- JQuery -->
	<!-- Bootstrap tooltips -->
	<!-- <script type="text/javascript" src="js/popper.min.js"></script> -->
	@RenderBody()

	@Scripts.Render("~/bundles/bootstrap")
	@Scripts.Render("~/bundles/library")
	@Scripts.Render("~/bundles/plugins")

	<!-- (Optional) Latest compiled and minified JavaScript translation files -->

	@RenderSection("scripts", required: false)
	<script src="//cdnjs.cloudflare.com/ajax/libs/angular-filter/0.5.1/angular-filter.js"></script>


	@*@Scripts.Render("~/bundles/app")*@

	@*<script src="~/app/bundle.js"></script>*@

	<script src="~/app/app.js"></script>


	<script src="~/app/js/config.js"></script>
	<script src="~/app/js/config.route.js"></script>
	<script src="~/app/js/config.exceptionHandler.js"></script>




	<script src="~/app/directives/dirPagination.js"></script>
	<script src="~/app/js/common.js"></script>
	<script src="~/app/js/logger.js"></script>
	<script src="~/app/services/datacontext-1.0.0.js"></script>
	<script src="~/app/services/directives.js"></script>
	<script src="~/app/directives/Directives-1.0.0.js"></script>


	<script src="~/app/controllers/homev2.js"></script>
	<script id="style8" src="~/app/controllers/booking.js"></script>
	<script src="~/app/controllers/bus-selection.js"></script>
	<script src="~/app/controllers/login.js"></script>
	<script src="~/app/controllers/payment.js"></script>

	<script src="~/app/controllers/resetPassword.js"></script>
	<script src="~/app/controllers/passenger-1.0.9.js"></script>
	<script src="~/app/controllers/hire-bus.js"></script>
	<script src="~/app/controllers/hirePassenger.js"></script>
	<script src="~/app/controllers/schedule-1.0.1.js"></script>
	<script src="~/app/controllers/partnerEnquiry-0.1.js"></script>


	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/js/bootstrap-select.min.js"></script>
	<script type="text/javascript" src="https://api.ravepay.co/flwv3-pug/getpaidx/api/flwpbf-inline.js"></script>
	@*<script type="text/javascript" src="https://test.theteller.net/checkout/resource/api/inline/theteller_inline.js"></script>*@
	<!--   <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>-->



	<script>
		// SideNav init

		//console.log($('.button-collapse'));


		/*  $(document).ready(function () {
              $(".button-collapse").sideNav();

              // Custom scrollbar init
              var el = document.querySelector('.custom-scrollbar');
              console.log(el);
              Ps.initialize(el);
              $('.mdb-select').material_select();

              $('.datepicker').pickadate();
          });*/

	</script>

	<script>
		$(document).ready(function () {
			Waves.attach('.gray', ['waves-effect']);

		});

		function myFunction() {

			window.location.href = 'booking.html';
		}

		$(document).ready(function () {
			$(function () {
				console.log("Inside!!");
				$(".button-collapse").sideNav();

				// Custom scrollbar init
				var el = document.querySelector('.custom-scrollbar');

				Ps.initialize(el);
				$('.mdb-select').material_select();

				/*  $('.datepicker').pickadate({
                      formatSubmit: 'mmm dd, yyyy'
                  });*/
				//$('.datepicker').pickadate({

				//	min: new Date(2018, 2, 4),
				//	max: new Date(2018, 2, 14)

				//});

				$(' #sel2').click(function () {
					$("#first .ng-pristine").toggleClass("show");
					$("#first .dropdown-menu").toggleClass("show");
					console.log("got here");
				});

				$(' #sel1').click(function () {
					$("#second .ng-pristine").toggleClass("show");
					$("#second .dropdown-menu").toggleClass("show");
					console.log("got here");
				});

				//  location.reload();
			});
		});
	</script>

	<script>
		function show1() {
			document.getElementById('hide').style.display = 'none';
			$('#date-arrival').val("");
			console.log($('#date-arrival').val());
		}

		function show2() {
			document.getElementById('hide').style.display = 'block';
		}

		document.addEventListener('touchmove', function (event) {
			event = event.originalEvent || event;
			if (event.scale > 1) {
				event.preventDefault();
			}
		}, false);

		//Initialization
		$(document).ready(function () {

			Waves.attach('.btn, .btn-floating', ['waves-light']);
			Waves.attach('.view .mask', ['waves-light']);
			Waves.attach('.waves-light', ['waves-light']);
			Waves.attach('.navbar-nav a, .nav-icons li a, .navbar form, .nav-tabs .nav-item', ['waves-light']);
			Waves.attach('.navbar-brand', ['waves-light']);
			Waves.attach('.pager li a', ['waves-light']);
			Waves.attach('.pagination .page-item .page-link', ['waves-effect']);
			Waves.init(); //Preloading script
		});
	</script>
	@*--------------Array.js defined here----------------*@
	<script>
		/*adds an item into array*/
		Array.prototype.add = function (item) {
			var arr = this;
			arr.push(item);
			return arr;
		}

		/*adds an item into the array, if the array does not already have
            an item whose [arrprop] property matches itemval*/
		Array.prototype.addif = function (item, arrprop, itemval) {
			var arr = this;
			if (!arr.contains(arrprop, itemval)) {
				arr.add(item);
			}
			else {
				var matches = arr.selectWhere(arrprop, itemval);
				if (matches.count() > 0) matches[0] = item;
			}
			return arr;
		}

		Array.prototype.from = function (index) {
			var arr = this;
			var ret = [];
			for (var i = index; i < arr.length; i++) {
				ret.push(arr[i]);
			}
			return ret;
		}

		/*adds a range of items. Usage: arr.addRange([0, 1, 2, 3])*/
		Array.prototype.addRange = function (arrs) {
			var arr = this;
			for (var i = 0; i < arrs.length; i++) {
				arr.add(arrs[i]);
			}
			return arr;
		}

		/*Gets the first item in the array, or first range of items. Usage: arr.first() or arr.first(count)*/
		Array.prototype.first = function (count) {
			var arr = this.valueOf();
			if (count == undefined) {
				if (arr.length > 0) {
					return arr[0];
				}
				else return {};
			}
			else {
				var ret = [];
				for (var i = 0; i < Math.min(count, arr.count()) ; i++) {
					ret.add(arr[i]);
				}
				return ret;
			}
		}

		//Gets the last item in the array, or last range of items. Usage: arr.last() or arr.last(count)
		Array.prototype.last = function (count) {
			var arr = this;
			if (count == undefined) {
				if (arr.length > 0) {
					return arr[arr.length - 1];
				}
				return {};
			}
			else {
				var ret = [];
				for (var i = Math.max(arr.length - count, 0) ; i < arr.length; i++) {
					ret.add(arr[i]);
				}
				return ret;
			}
		}

		/*Gets a sub-array with items whose specified property match a specified value. Usage: arr.selectWhere(property as string, value to match).
        *Can be chained. E.g. arr.selectWhere(prop, val).selectWhere(prop1, val1).selectWhere(prop2, val2)
        */
		Array.prototype.selectWhere = function (prop, val) {
			var arr = this;
			var ret = [];
			for (var i = 0; i < arr.length; i++) {
				if (arr[i][prop] == val) {
					ret.add(arr[i]);
				}
			}
			return ret;
		}

		Array.prototype.where = function (prop, val) {
			var arr = this;
			return arr.selectWhere(prop, val);
		}

		/*Gets a sub-array where properties have values specified
        *Usage: arr.selectWheres([ { prop: "name", val: "michael" }, { prop: "sex", val: "male" } ])
        *Note: You could use Chained selectWhere instead.
        */
		Array.prototype.selectWheres = function (prop_vals) {
			var arr = this;
			var ret = [];
			for (var i = 0; i < arr.length; i++) {
				var b = true;
				for (var j = 0; j < prop_vals.length; j++) {
					var prop = prop_vals[j].prop;
					var val = prop_vals[j].val;
					if (arr[i][prop] != val) {
						b = false;
					}
				}
				if (b) {
					ret.add(arr[i]);
				}
			}
			return ret;
		}

		/*Returns a sub array with items that meet a specified condition provided in a function
        *Usage: arr.selectByFunction(function (i) {
        *                               if (arr[i].price <= 500) { return arr[i]; }
        *                            });
        *Note that you should always return the sub item if you want it to be in the sub array
        *You could also use this as an iterator in place of a for / foreach loop.
        */
		Array.prototype.selectByFunction = function (condition) {
			var arr = this;
			var ret = [];
			for (var i = 0; i < arr.length; i++) {
				if (condition(i)) {
					ret.add(arr[i]);
				}
			}
			return ret;
		}

		/*Performs bubble sort on an array
        *Usage: arr.sort() or arr.sort("asc"): sorts in ascending order.
        *Usage: arr.sort("desc"): sorts in descending order.
        *Note: For best performance, use on primitive types only
        */
		Array.prototype.sort = function (type) {
			var arr = this;
			var swapped;
			do {
				swapped = false;
				var b;

				for (var i = 0; i < arr.length - 1; i++) {
					if (type == undefined || type == "asc") b = arr[i] > arr[i + 1];
					else b = arr[i] < arr[i + 1];
					if (b) {
						var temp = arr[i];
						arr[i] = arr[i + 1];
						arr[i + 1] = temp;
						swapped = true;
					}
				}
			}
			while (swapped);
			return arr;
		}

		/*Performs insertion sort on an array
        *Usage: arr.sort()
        *Note: Much faster than bubble sort. To be used on very large arrays. A bit annoying to debug tho
        */
		Array.prototype.isort = function (type) {
			var arr = this.valueOf();
			if (arr.length > 1) {
				arr.push(arr[0]);
			}
			var ret = [];
			for (var i = 0; i < arr.length; i++) {
				var index = 0;
				var finished = true;
				for (var j = 1; j < ret.length; j++) {
					if (ret[j] >= arr[i]) {
						index = j;
						finished = false;
						break;
					}
					else finished = false;
				}
				if (ret.length === 0) ret.push(arr[i]);
				else if (index === 0 || finished == true) ret.push(arr[i]);
				else ret = ret.insert(arr[i], index);
			}
			if (ret.length > 1) {
				var first = ret[0];
				ret = ret.splice(1, ret.length - 1);
			}
			return ret;
		}

		/*Performs binary search on a sorted array and returns index of found item
        *Usage: arr.bsearch(5)
        */
		Array.prototype.bsearch = function (item) {
			var arr = this.valueOf();
			if (arr.length == 0) return -1
			else {
				var start = 0;
				var end = arr.length - 1;
				while (start < end) {
					var mid = Math.floor(Number(start + end) / 2);
					if (item < arr[mid]) {
						end = mid;
					}
					else if (item > arr[mid]) {
						start = mid;
					}
					else {
						return mid;
					}
				}
				console.log(arr[start]);
				console.log(start);
				if (item == arr[start]) return start;
				else return -1;
			}
		}

		/*Sort by array_item property. type could be empty (undefined) or 'asc' or 'desc'
        * Sorts an array by a specific property.
        * Usage: arr.sortBy(property)
        * Usage: arr.sortBy(property, "asc")
        * Usage: arr.sortBy(property, "desc")
        */
		Array.prototype.sortBy = function (prop, type) {
			var arr = this;
			var swapped;
			do {
				swapped = false;

				for (var i = 0; i < arr.length - 1; i++) {
					var b;
					if (type == undefined || type == "asc") b = arr[i][prop] > arr[i + 1][prop];
					else b = arr[i][prop] < arr[i + 1][prop];
					if (b) {
						var temp = arr[i];
						arr[i] = arr[i + 1];
						arr[i + 1] = temp;
						swapped = true;
					}
				}
			}
			while (swapped);
		}

		/*returns boolean whether the array is sorted or not
        *Usage: arr.isSorted() or arr.isSorted("asc")
        *Usage: arr.isSorted("desc")
        */

		Array.prototype.isSorted = function (type) {
			var arr = this;
			for (var i = 1; i < arr.length; i++) {
				var b;
				if (type == undefined || type == "asc") b = arr[i] < arr[i - 1];
				else b = arr[i] > arr[i - 1];
				if (b) {
					return false;
				}
			}
			return true;
		}

		/*inserts into an index
        *Usage: arr.insert(5, 2);
        */
		Array.prototype.insert = function (item, index) {
			var ret = [];
			var arr = this;
			if (index == undefined) {
				arr.push(item);
				return arr;
			}
			if (index > arr.count() - 1) return arr;
			for (var i = 0; i < index; i++) {
				ret.add(arr[i]);
			}
			ret.add(item);
			for (var i = index; i < arr.length; i++) {
				ret.add(arr[i]);
			}
			arr.clear();
			arr = ret;
			return ret;
		}

		/*clears the array
        *Usage: arr.clear();
        */
		Array.prototype.clear = function () {
			var arr = this;
			while (arr.count() > 0) {
				arr.pop();
			}
		}

		//returns number of items in array. same as array.length. Usage: arr.count()
		Array.prototype.count = function () {
			var arr = this;
			return this.length;
		}

		/*returns index of an arrayitem where arrayitem's property is equal to item. Similar to arr.contains(item, prop)
        *Usage: arr.indexOfProp("michael", "name");
        */
		Array.prototype.indexOfProp = function (item, prop) {
			var arr = this;
			for (var i = 0; i < arr.length; i++) {
				if (arr[i][prop] == item) {
					return i;
				}
			}
			return -1;
		}

		//get array item at index
		Array.prototype.getAt = function (index) {
			var arr = this;
			for (var i = 0; i < arr.length; i++) {
				if (i == index) return arr[i];
			}
			return undefined;
		}

		//returns boolean showing whether array contains an item, or if one of its properties (arr[i].prop) is equal to item
		Array.prototype.contains = function (item, prop) {
			var arr = this;
			if (prop == undefined || prop == null) {
				for (var i = 0; i < arr.length; i++) {
					if (arr[i] == item) {
						return true;
					}
				}
			}
			else {
				for (var i = 0; i < arr.length; i++) {
					if (arr[i][prop] == item) return true;
				}
			}
			return false;
		}

		//makes items distinct
		Array.prototype.distinct = function (prop) {
			var arr = this.valueOf();
			var ret = [];
			for (var i = 0; i < arr.length; i++) {
				var b;
				if (prop == undefined) b = !ret.contains(arr[i]);
				else b = !ret.contains(arr[i][prop], prop);
				if (b) {
					ret.push(arr[i]);
				}
			}
			return ret;
		}

		//removes an item by either itself or its property
		Array.prototype.remove = function (item, prop) {
			var arr = this;
			var x = 0;
			var ret = [];
			if (prop == undefined || prop == null) {
				for (var i = 0; i < arr.count() ; i++) {
					if (arr[i] != item) {
						ret.push(arr[i]);
					}
				}
			}
			else {
				for (var i = 0; i < arr.count() ; i++) {
					if (arr[i][prop] != item) {
						ret.push(arr[i]);
					}
				}
			}
			arr.clear();
			arr.addRange(ret);
			return arr;
		}

		//Removes an item at an index of the array
		Array.prototype.removeAt = function (index) {
			var arr = this;
			var ret = [];
			for (var i = 0; i < arr.length; i++) {
				if (i != index) {
					ret.add(arr[i]);
				}
			}
			arr.clear();
			arr.addRange(ret);
			return arr;
		}

		//Shuffles the items in an Array
		Array.prototype.shuffle = function () {
			var arr = this.valueOf();
			var ret = [];
			while (ret.length < arr.length) {
				var x = arr[Math.floor(Number(Math.random() * arr.length))];
				if (!(ret.indexOf(x) >= 0)) ret.push(x);
			}
			return ret;
		}

		/*Creates a new Array using an existing one. Could be used to clone an array.
        *Usage: [].create([0, 1, 2, 3])
        */
		Array.prototype.create = function (items) {
			var ret = [];
			for (var i = 0; i < items.length; i++) {
				ret.add(items[i]);
			}
			return ret;
		}

		/*Returns an array of items consisting of all numbers starting from Number(start) till and including Number(end)*/
		Array.prototype.range = function (start, end) {
			var arr = this;
			var ret = [];
			for (var i = start; i <= end; i++) {
				ret.add(i);
			}
			return ret;
		}

		//returns an array containing the values of designated property in each of its items
		Array.prototype.select = function (prop) {
			var arr = this;
			var ret = [];
			arr.selectByFunction(function (i) {
				ret.push(arr[i][prop]);
			});
			return ret;
		}

		//true, if the array is empty
		Array.prototype.isEmpty = function () {
			return this.length == 0;
		}

		/*pass in a function with an item as argument to be performed on each item of the array ... e.g.

        [].each(function (item) {
            ...
        });
        */
		Array.prototype.each = function (fn) {
			var arr = this;
			for (var i = 0; i < arr.length; i++) {
				fn(arr[i]);
			}
			return arr;
		}

		Array.prototype.flatten = function () {
			var arr = this.valueOf();
			var ret = [];
			arr.each(function (item) {
				if (Array.isArray(item)) {
					item.each(function (itm) {
						ret.add(itm);
					});
				}
				else {
					ret.add(item);
				}
			});
			arr.clear();
			arr = [].create(ret);
			return arr;
		}

		Array.prototype.string = function (place) {
			var arr = this;
			var str = "";
			place = place || "";
			arr.each(function (item) {
				str += item + place;
			});
			return str;
		}

		//divides an array into pages, with a maximum size
		Array.prototype.paginate = function (maxsize) {
			if (!maxsize) maxsize = 10;
			var arr = this;
			var ret = [];
			var i = 0;
			var ret_i = [];
			arr.each(function (item) {
				if (i < maxsize) {
					ret_i.add(item);
					i += 1;
				}
				else {
					ret.add([].create(ret_i));
					ret_i.clear();
					ret_i.add(item);
					i = 1;
				}
			});
			if (!ret_i.isEmpty()) {
				ret.add([].create(ret_i));
			}
			return ret;
		}

		//returns the minimum array item
		Array.prototype.min = function () {
			var arr = this;
			var min = arr.first();
			if (arr.count() > 0) {
				arr.each(function (item) {
					min = item < min ? item : min;
				});
				return min;
			}
			return undefined;
		}

		//returns the maximum array item
		Array.prototype.max = function () {
			var arr = this;
			var max = arr.first();
			if (arr.count() > 0) {
				arr.each(function (item) {
					max = item > max ? item : max;
				});
				return max;
			}
			return undefined;
		}

		/*This should used for numbers. It returns the average*/
		Array.prototype.average = function () {
			var arr = this;
			var total = 0;
			arr.each(function (item) {
				if (Number(item)) total += Number(item);
			});
			return total / arr.count();
		}

		Array.prototype.sum = function () {
			var arr = this;
			var sum = 0;
			arr.each(function (x) {
				sum += x;
			});
			return sum;
		}

		/*Lets you sync arrays by comparing a particular property,
            which acts as a primary key, making sure that the values of that property
            in each item in that array are unique*/
		Array.prototype.sync = function (arr2, prop) {
			var arr = this;
			for (var i = 0; i < arr2.length; i++) {
				var arr2_item = arr2[i];
				arr.addif(arr2_item, prop, arr2_item[prop]);
			}
			return arr;
		}

		Array.prototype.random = function (count) {
			var arr = this.valueOf();
			if (count && Number.isSafeInteger(count)) {
				for (var i = 0; i < count; i++) {
					return arr.shuffle().first(count);
				}
			}
			else {
				return arr.shuffle().first();
			}
		}
	</script>
	<script>
		$('.click-me').click(function () {
			$("#trippanel").toggle();
			console.log("clicked collapse1");
			//$("form5").css('margin-top', '5%');
		});

		$('.click-me2').click(function () {
			$("#trippanel2").toggle();
			console.log("clicked collapse");
			$("#form5").toggleClass("adjust");

		});

		$('.click-me3').click(function () {
			$("#trip-panel3").toggle();
			console.log("clicked collapse");
		});

		$(document).ready(function () {
			$(".why .button").click(function () {
				$(".messages li").toggle("slow");
			});
		});
	</script>
	<script>
		//Open facebook event

		var useragent = navigator.userAgent; // cache the userAgent info
		var iPhone = (useragent.match(/(iPad|iPhone|iPod)/g));


		$(document).ready(function () {
			//$(document).on("pageinit", "#home", function (e, data) {


			//$(".main2").attr("href", "http://onelink.to/d4d9ke")

			$(".main2 .click").click(function () {


				//alert('Show dialog!');
				window.location.href = "http://onelink.to/d4d9ke";
			});


			$('.openapp').on('click', function (event) {

				//if (iPhone) {
				//	window.location = "fb://page/?id=" + $(this).data('id');
				//	location.reload();
				//}
				//else {
				//	window.location = "fb://page/" + $(this).data('id');
				//}
				//event.preventDefault();

				//	if (!document.hidden) {

				//		setTimeout(function () { window.location = "https://www.facebook.com/GIGMOTORS/"; }, 25);


				//	}

				var scheme;
				if (iPhone)
					scheme = "fb://page/?id=" + $(this).data('id');
				else
					scheme = "fb://page/" + $(this).data('id');
				uriSchemeWithHyperlinkFallback(scheme, $(this).attr('href'));
				event.preventDefault();

			});


		});



		$(document).ready(function () {
			//for twitter
			$('.opentwitter').on('click', function (event) {
				window.location = "twitter:///user?screen_name=gigmotors";

				console.log(document.visibilityState);
				console.log(document.hidden);
				if (!document.hidden) {


					setTimeout(function () { window.location = "https://www.twitter.com/GIGMOTORS/"; }, 25);

				}





			});

		});

	</script>

	<script>
		//alert("Welcome");
		//self.addEventListener('activate', function (event) {
		//	event.waitUntil(
		//	  caches.keys().then(function (preCacheNames) {
		//	  	return Promise.all(
		//		  preCacheNames.filter(function (preCacheName) {
		//		  	// Return true if you want to remove this cache,
		//		  	// but remember that caches are shared across
		//		  	// the whole origin
		//		  }).map(function (preCacheName) {
		//		  	return caches.delete(preCacheName);
		//		  	return caches.delete(preCacheFiles);
		//		  })
		//		);
		//	  })
		//	);
		//});
	</script>

</body>
</html>
